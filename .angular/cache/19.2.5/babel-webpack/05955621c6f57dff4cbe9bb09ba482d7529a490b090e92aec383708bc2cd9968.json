{"ast":null,"code":"import { TemplatePortal } from '@angular/cdk/portal';\nimport { ToolOptionsService } from '../../../services/tool-options.service';\nimport { Platform } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/tool-options.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/cdk/platform\";\nconst _c0 = [\"optionsTmpl\"];\nfunction DrawToolComponent_ng_template_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"swiper-container\", 5)(2, \"swiper-slide\");\n    i0.ɵɵtext(3, \"Slide 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"swiper-slide\");\n    i0.ɵɵtext(5, \"Slide 2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"swiper-slide\");\n    i0.ɵɵtext(7, \"Slide 3\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction DrawToolComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵtemplate(1, DrawToolComponent_ng_template_3_ng_container_1_Template, 8, 0, \"ng-container\", 2);\n    i0.ɵɵelementStart(2, \"div\")(3, \"div\", 3);\n    i0.ɵɵtext(4, \"Thickness\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"mat-slider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"div\", 3);\n    i0.ɵɵtext(8, \"Color\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 4)(10, \"mat-icon\");\n    i0.ɵɵtext(11, \"color_lens\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.platform.isBrowser, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.platform.isBrowser);\n  }\n}\nexport class DrawToolComponent {\n  constructor(toolOptionsService, platform) {\n    this.toolOptionsService = toolOptionsService;\n    this.platform = platform;\n    console.log('constructed Draw tool');\n    console.log(this.platform.isBrowser, this.platform.ANDROID, this.platform.IOS);\n  }\n  setTool() {\n    this.toolOptionsService.setPortal(new TemplatePortal(this.optionsTmpl, undefined, {}));\n  }\n  static {\n    this.ɵfac = function DrawToolComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DrawToolComponent)(i0.ɵɵdirectiveInject(i1.ToolOptionsService), i0.ɵɵdirectiveInject(Platform));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DrawToolComponent,\n      selectors: [[\"app-draw-tool\"]],\n      viewQuery: function DrawToolComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsTmpl = _t.first);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([ToolOptionsService])],\n      decls: 5,\n      vars: 0,\n      consts: [[\"optionsTmpl\", \"\"], [\"mat-icon-button\", \"\", 3, \"click\"], [4, \"ngIf\"], [1, \"option-label\"], [\"mat-icon-button\", \"\"], [\"slides-per-view\", \"3\", \"speed\", \"500\", \"loop\", \"true\", \"css-mode\", \"true\"]],\n      template: function DrawToolComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function DrawToolComponent_Template_button_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.setTool());\n          });\n          i0.ɵɵelementStart(1, \"mat-icon\");\n          i0.ɵɵtext(2, \"gesture\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(3, DrawToolComponent_ng_template_3_Template, 12, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n      },\n      dependencies: [CommonModule, i2.NgIf, MatIconModule, i3.MatIcon],\n      styles: [\".option-label[_ngcontent-%COMP%] {\\n  font-size: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90b29scy9kcmF3LXRvb2wvZHJhdy10b29sLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLm9wdGlvbi1sYWJlbCB7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["TemplatePortal","ToolOptionsService","Platform","CommonModule","MatIconModule","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","DrawToolComponent_ng_template_3_ng_container_1_Template","ɵɵelement","ɵɵtextInterpolate1","ctx_r1","platform","isBrowser","ɵɵadvance","ɵɵproperty","DrawToolComponent","constructor","toolOptionsService","console","log","ANDROID","IOS","setTool","setPortal","optionsTmpl","undefined","ɵɵdirectiveInject","i1","selectors","viewQuery","DrawToolComponent_Query","rf","ctx","decls","vars","consts","template","DrawToolComponent_Template","ɵɵlistener","DrawToolComponent_Template_button_click_0_listener","ɵɵrestoreView","_r1","ɵɵresetView","DrawToolComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","i2","NgIf","i3","MatIcon","styles"],"sources":["/home/xhani-manolis-trungu/angular-material2-portal-tools-poc/src/app/components/tools/draw-tool/draw-tool.component.ts","/home/xhani-manolis-trungu/angular-material2-portal-tools-poc/src/app/components/tools/draw-tool/draw-tool.component.html"],"sourcesContent":["import { Component, ViewChild, TemplateRef, Inject, ViewContainerRef, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\n\r\nimport { ToolOptionsService } from '../../../services/tool-options.service';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-draw-tool',\r\n  templateUrl: 'draw-tool.component.html',\r\n  styleUrls: ['./draw-tool.component.scss'],\r\n  imports: [CommonModule, MatIconModule],\r\n  providers: [ToolOptionsService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class DrawToolComponent {\r\n  @ViewChild('optionsTmpl') optionsTmpl: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private toolOptionsService: ToolOptionsService,\r\n    @Inject(Platform) public readonly platform: Platform\r\n  ) {\r\n    console.log('constructed Draw tool');\r\n    console.log(\r\n      this.platform.isBrowser,\r\n      this.platform.ANDROID,\r\n      this.platform.IOS\r\n    );\r\n  }\r\n\r\n  setTool() {\r\n    this.toolOptionsService.setPortal(\r\n      new TemplatePortal(this.optionsTmpl, undefined as unknown as ViewContainerRef, {})\r\n    );\r\n  }\r\n}\r\n","<button mat-icon-button (click)=\"setTool()\">\r\n  <mat-icon>gesture</mat-icon>\r\n</button>\r\n\r\n<ng-template #optionsTmpl>\r\n  {{ platform.isBrowser }}\r\n  <ng-container *ngIf=\"platform.isBrowser\">\r\n    <swiper-container\r\n      slides-per-view=\"3\"\r\n      speed=\"500\"\r\n      loop=\"true\"\r\n      css-mode=\"true\"\r\n    >\r\n      <swiper-slide>Slide 1</swiper-slide>\r\n      <swiper-slide>Slide 2</swiper-slide>\r\n      <swiper-slide>Slide 3</swiper-slide>\r\n    </swiper-container>\r\n  </ng-container>\r\n  <div>\r\n    <div class=\"option-label\">Thickness</div>\r\n    <mat-slider></mat-slider>\r\n  </div>\r\n  <div>\r\n    <div class=\"option-label\">Color</div>\r\n    <button mat-icon-button>\r\n      <mat-icon>color_lens</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}